node enlace(c, status: bool) returns (estado:int)
let
    automaton

        state OFF do
            estado = 1;
        unless status then ON

        state ON do
            estado = 2;
        unless not status then OFF
            | c then SEND

        state SEND do
            estado = 3;
        unless not status then OFF
            | not c then ON

    end
tel

node protocolos(nota_http, nota_smtp, nota_ftp:int) returns (estado, melhor_valor:int)
let
    automaton

        state HTTP do
            estado = 1;
            melhor_valor = nota_http;
        unless nota_ftp <= nota_http then FTP
            | nota_smtp <= nota_http then SMTP

        state FTP do
            estado = 2;
            melhor_valor = nota_ftp;
        unless nota_http <= nota_ftp then HTTP
            | nota_smtp <= nota_ftp then SMTP

        state SMTP do
            estado = 3;
            melhor_valor = nota_smtp;
        unless nota_ftp <= nota_smtp then FTP
            | nota_http <= nota_smtp then SMTP

    end
tel

node escolha_protocolo(prot_3g, prot_wf, prot_eth, valor_3g, valor_wf, valor_eth:int) returns (melhor_prot:int)
let
    automaton

        state HTTP do
            melhor_prot = 1;
        unless ((prot_wf = 2) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then FTP
            | (prot_3g = 2 & (valor_3g <= valor_wf) & (valor_3g <= valor_eth)) then FTP
            | (prot_eth = 2 & (valor_eth <= valor_wf) & (valor_eth <= valor_3g)) then FTP
            | ((prot_wf = 3) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then SMTP
            | ((prot_3g = 3) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then SMTP
            | ((prot_eth = 3) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then SMTP

        state FTP do
            melhor_prot = 2;
        unless ((prot_wf = 1) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then HTTP
            | (prot_3g = 1 & (valor_3g <= valor_wf) & (valor_3g <= valor_eth)) then HTTP
            | (prot_eth = 1 & (valor_eth <= valor_wf) & (valor_eth <= valor_3g)) then HTTP
            | ((prot_wf = 3) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then SMTP
            | ((prot_3g = 3) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then SMTP
            | ((prot_eth = 3) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then SMTP

        state SMTP do
            melhor_prot = 3;
        unless ((prot_wf = 1) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then HTTP
            | (prot_3g = 1 & (valor_3g <= valor_wf) & (valor_3g <= valor_eth)) then HTTP
            | (prot_eth = 1 & (valor_eth <= valor_wf) & (valor_eth <= valor_3g)) then HTTP
            | ((prot_wf = 2) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then FTP
            | ((prot_3g = 2) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then FTP
            | ((prot_eth = 2) & (valor_wf <= valor_3g) & (valor_wf <= valor_eth)) then FTP

    end
tel

node escolha_enlace(valor_3g, valor_wf, valor_eth: int) returns (enlace:int)
let
    automaton

        state ETH do
            enlace = 1;
        unless ((valor_wf <= valor_3g) & (valor_wf < valor_eth)) then WIFI
            |  ((valor_3g <= valor_wf) & (valor_3g < valor_eth)) then TresG

        state WIFI do
            enlace = 2;
        unless ((valor_eth <= valor_3g) & (valor_eth <= valor_wf)) then ETH
            |  ((valor_3g <= valor_eth) & (valor_3g < valor_wf)) then TresG

        state TresG do
            enlace = 2;
        unless ((valor_eth <= valor_3g) & (valor_eth <= valor_wf)) then ETH
            |  ((valor_wf <= valor_eth) & (valor_wf < valor_3g)) then WIFI

    end
tel



node controlador_multihomed (status_3g, cwf, status_wf, ceth, status_eth:bool; nota_http3g, nota_smtp3g, nota_ftp3g, nota_httpwf, nota_smtpwf, nota_ftpwf, nota_httpeth, nota_smtpeth, nota_ftpeth:int) returns (estado_3g, prot_3g, valor_3g, estado_wf, prot_wf, valor_wf, estado_eth, prot_eth, valor_eth, melhor_protocolo, melhor_enlace: int)
    contract
        var 
            regra3g: bool;
    let
        regra3g = not (melhor_enlace = 2) or (estado_3g = 2);
    tel
    enforce regra3g
            with (c3g: bool)

let
    estado_3g = enlace(c3g, status_3g);
    (prot_3g, valor_3g) = protocolos(nota_http3g, nota_smtp3g, nota_ftp3g);
    estado_wf = enlace(cwf, status_wf);
    (prot_wf, valor_wf) = protocolos(nota_httpwf, nota_smtpwf, nota_ftpwf);
    estado_eth = enlace(ceth, status_eth);
    (prot_eth, valor_eth) = protocolos(nota_httpeth, nota_smtpeth, nota_ftpeth);
    melhor_protocolo = escolha_protocolo(prot_3g, prot_wf, prot_eth, valor_3g, valor_wf, valor_eth);
    melhor_enlace = escolha_enlace(valor_3g, valor_wf, valor_eth);

tel

